// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client5_savefile.proto

#include "client5_savefile.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_client5_5fsavefile_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SaveHost_client5_5fsavefile_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_client5_5fsavefile_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SaveMusicDB_client5_5fsavefile_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_client5_5fsavefile_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SaveSAM_client5_5fsavefile_2eproto;
class SaveHostDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SaveHost> _instance;
} _SaveHost_default_instance_;
class SaveSAMDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SaveSAM> _instance;
} _SaveSAM_default_instance_;
class SaveMusicDBDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SaveMusicDB> _instance;
} _SaveMusicDB_default_instance_;
class ConfigFileDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConfigFile> _instance;
} _ConfigFile_default_instance_;
static void InitDefaultsSaveHost_client5_5fsavefile_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_SaveHost_default_instance_;
    new (ptr) ::SaveHost();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SaveHost::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SaveHost_client5_5fsavefile_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSaveHost_client5_5fsavefile_2eproto}, {}};

static void InitDefaultsSaveSAM_client5_5fsavefile_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::SaveSAM::_i_give_permission_to_break_this_code_default_host_.DefaultConstruct();
  *::SaveSAM::_i_give_permission_to_break_this_code_default_host_.get_mutable() = ::std::string("localhost", 9);
  ::google::protobuf::internal::OnShutdownDestroyString(
      ::SaveSAM::_i_give_permission_to_break_this_code_default_host_.get_mutable());
  ::SaveSAM::_i_give_permission_to_break_this_code_default_user_.DefaultConstruct();
  *::SaveSAM::_i_give_permission_to_break_this_code_default_user_.get_mutable() = ::std::string("root", 4);
  ::google::protobuf::internal::OnShutdownDestroyString(
      ::SaveSAM::_i_give_permission_to_break_this_code_default_user_.get_mutable());
  ::SaveSAM::_i_give_permission_to_break_this_code_default_db_.DefaultConstruct();
  *::SaveSAM::_i_give_permission_to_break_this_code_default_db_.get_mutable() = ::std::string("samdb", 5);
  ::google::protobuf::internal::OnShutdownDestroyString(
      ::SaveSAM::_i_give_permission_to_break_this_code_default_db_.get_mutable());
  {
    void* ptr = &::_SaveSAM_default_instance_;
    new (ptr) ::SaveSAM();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SaveSAM::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SaveSAM_client5_5fsavefile_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSaveSAM_client5_5fsavefile_2eproto}, {}};

static void InitDefaultsSaveMusicDB_client5_5fsavefile_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_SaveMusicDB_default_instance_;
    new (ptr) ::SaveMusicDB();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SaveMusicDB::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SaveMusicDB_client5_5fsavefile_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSaveMusicDB_client5_5fsavefile_2eproto}, {}};

static void InitDefaultsConfigFile_client5_5fsavefile_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ConfigFile_default_instance_;
    new (ptr) ::ConfigFile();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ConfigFile::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_ConfigFile_client5_5fsavefile_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsConfigFile_client5_5fsavefile_2eproto}, {
      &scc_info_SaveSAM_client5_5fsavefile_2eproto.base,
      &scc_info_SaveMusicDB_client5_5fsavefile_2eproto.base,
      &scc_info_SaveHost_client5_5fsavefile_2eproto.base,}};

void InitDefaults_client5_5fsavefile_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_SaveHost_client5_5fsavefile_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SaveSAM_client5_5fsavefile_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SaveMusicDB_client5_5fsavefile_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConfigFile_client5_5fsavefile_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_client5_5fsavefile_2eproto[4];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_client5_5fsavefile_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_client5_5fsavefile_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_client5_5fsavefile_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::SaveHost, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::SaveHost, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::SaveHost, name_),
  PROTOBUF_FIELD_OFFSET(::SaveHost, host_),
  PROTOBUF_FIELD_OFFSET(::SaveHost, user_),
  PROTOBUF_FIELD_OFFSET(::SaveHost, pass_),
  PROTOBUF_FIELD_OFFSET(::SaveHost, port_),
  PROTOBUF_FIELD_OFFSET(::SaveHost, mode_),
  0,
  1,
  2,
  3,
  5,
  4,
  PROTOBUF_FIELD_OFFSET(::SaveSAM, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::SaveSAM, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::SaveSAM, host_),
  PROTOBUF_FIELD_OFFSET(::SaveSAM, user_),
  PROTOBUF_FIELD_OFFSET(::SaveSAM, pass_),
  PROTOBUF_FIELD_OFFSET(::SaveSAM, db_),
  PROTOBUF_FIELD_OFFSET(::SaveSAM, port_),
  0,
  1,
  2,
  3,
  4,
  PROTOBUF_FIELD_OFFSET(::SaveMusicDB, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::SaveMusicDB, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::SaveMusicDB, folder_),
  0,
  PROTOBUF_FIELD_OFFSET(::ConfigFile, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ConfigFile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ConfigFile, host_index_),
  PROTOBUF_FIELD_OFFSET(::ConfigFile, beep_on_req_),
  PROTOBUF_FIELD_OFFSET(::ConfigFile, connect_on_startup_),
  PROTOBUF_FIELD_OFFSET(::ConfigFile, keep_on_top_),
  PROTOBUF_FIELD_OFFSET(::ConfigFile, sam_),
  PROTOBUF_FIELD_OFFSET(::ConfigFile, musicdb_),
  PROTOBUF_FIELD_OFFSET(::ConfigFile, connections_),
  2,
  5,
  3,
  4,
  0,
  1,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 11, sizeof(::SaveHost)},
  { 17, 27, sizeof(::SaveSAM)},
  { 32, 38, sizeof(::SaveMusicDB)},
  { 39, 51, sizeof(::ConfigFile)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SaveHost_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SaveSAM_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SaveMusicDB_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ConfigFile_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_client5_5fsavefile_2eproto = {
  {}, AddDescriptors_client5_5fsavefile_2eproto, "client5_savefile.proto", schemas,
  file_default_instances, TableStruct_client5_5fsavefile_2eproto::offsets,
  file_level_metadata_client5_5fsavefile_2eproto, 4, file_level_enum_descriptors_client5_5fsavefile_2eproto, file_level_service_descriptors_client5_5fsavefile_2eproto,
};

const char descriptor_table_protodef_client5_5fsavefile_2eproto[] =
  "\n\026client5_savefile.proto\"e\n\010SaveHost\022\014\n\004"
  "name\030\001 \002(\t\022\014\n\004host\030\002 \002(\t\022\014\n\004user\030\003 \002(\t\022\014"
  "\n\004pass\030\004 \002(\t\022\023\n\004port\030\005 \001(\r:\00510000\022\014\n\004mod"
  "e\030\006 \001(\r\"k\n\007SaveSAM\022\027\n\004host\030\001 \001(\t:\tlocalh"
  "ost\022\022\n\004user\030\002 \001(\t:\004root\022\014\n\004pass\030\003 \001(\t\022\021\n"
  "\002db\030\004 \001(\t:\005samdb\022\022\n\004port\030\005 \001(\r:\0043306\"\035\n\013"
  "SaveMusicDB\022\016\n\006folder\030\001 \001(\t\"\302\001\n\nConfigFi"
  "le\022\022\n\nhost_index\030\002 \001(\005\022\031\n\013beep_on_req\030\003 "
  "\001(\010:\004true\022\032\n\022connect_on_startup\030\004 \001(\010\022\023\n"
  "\013keep_on_top\030\005 \001(\010\022\025\n\003sam\030\006 \001(\0132\010.SaveSA"
  "M\022\035\n\007musicdb\030\007 \001(\0132\014.SaveMusicDB\022\036\n\013conn"
  "ections\030\010 \003(\0132\t.SaveHost"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_client5_5fsavefile_2eproto = {
  false, InitDefaults_client5_5fsavefile_2eproto, 
  descriptor_table_protodef_client5_5fsavefile_2eproto,
  "client5_savefile.proto", &assign_descriptors_table_client5_5fsavefile_2eproto, 464,
};

void AddDescriptors_client5_5fsavefile_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_client5_5fsavefile_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_client5_5fsavefile_2eproto = []() { AddDescriptors_client5_5fsavefile_2eproto(); return true; }();

// ===================================================================

void SaveHost::InitAsDefaultInstance() {
}
class SaveHost::HasBitSetters {
 public:
  static void set_has_name(SaveHost* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_host(SaveHost* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_user(SaveHost* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_pass(SaveHost* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_port(SaveHost* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
  static void set_has_mode(SaveHost* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SaveHost::kNameFieldNumber;
const int SaveHost::kHostFieldNumber;
const int SaveHost::kUserFieldNumber;
const int SaveHost::kPassFieldNumber;
const int SaveHost::kPortFieldNumber;
const int SaveHost::kModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SaveHost::SaveHost()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SaveHost)
}
SaveHost::SaveHost(const SaveHost& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_host()) {
    host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_);
  }
  user_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_user()) {
    user_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_);
  }
  pass_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pass()) {
    pass_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pass_);
  }
  ::memcpy(&mode_, &from.mode_,
    static_cast<size_t>(reinterpret_cast<char*>(&port_) -
    reinterpret_cast<char*>(&mode_)) + sizeof(port_));
  // @@protoc_insertion_point(copy_constructor:SaveHost)
}

void SaveHost::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SaveHost_client5_5fsavefile_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pass_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mode_ = 0u;
  port_ = 10000u;
}

SaveHost::~SaveHost() {
  // @@protoc_insertion_point(destructor:SaveHost)
  SharedDtor();
}

void SaveHost::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pass_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SaveHost::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SaveHost& SaveHost::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SaveHost_client5_5fsavefile_2eproto.base);
  return *internal_default_instance();
}


void SaveHost::Clear() {
// @@protoc_insertion_point(message_clear_start:SaveHost)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      host_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      user_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      pass_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x00000030u) {
    mode_ = 0u;
    port_ = 10000u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SaveHost::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SaveHost*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("SaveHost.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required string host = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("SaveHost.host");
        object = msg->mutable_host();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required string user = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("SaveHost.user");
        object = msg->mutable_user();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required string pass = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("SaveHost.pass");
        object = msg->mutable_pass();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 port = 5 [default = 10000];
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_port(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 mode = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_mode(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SaveHost::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SaveHost)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "SaveHost.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string host = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->host().data(), static_cast<int>(this->host().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "SaveHost.host");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string user = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->user().data(), static_cast<int>(this->user().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "SaveHost.user");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string pass = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pass()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->pass().data(), static_cast<int>(this->pass().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "SaveHost.pass");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 port = 5 [default = 10000];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_port(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 mode = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          HasBitSetters::set_has_mode(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SaveHost)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SaveHost)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SaveHost::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SaveHost)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SaveHost.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required string host = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host().data(), static_cast<int>(this->host().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SaveHost.host");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->host(), output);
  }

  // required string user = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user().data(), static_cast<int>(this->user().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SaveHost.user");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->user(), output);
  }

  // required string pass = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pass().data(), static_cast<int>(this->pass().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SaveHost.pass");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->pass(), output);
  }

  // optional uint32 port = 5 [default = 10000];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->port(), output);
  }

  // optional uint32 mode = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->mode(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SaveHost)
}

::google::protobuf::uint8* SaveHost::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SaveHost)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SaveHost.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required string host = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host().data(), static_cast<int>(this->host().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SaveHost.host");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->host(), target);
  }

  // required string user = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user().data(), static_cast<int>(this->user().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SaveHost.user");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->user(), target);
  }

  // required string pass = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pass().data(), static_cast<int>(this->pass().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SaveHost.pass");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->pass(), target);
  }

  // optional uint32 port = 5 [default = 10000];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->port(), target);
  }

  // optional uint32 mode = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->mode(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SaveHost)
  return target;
}

size_t SaveHost::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:SaveHost)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_host()) {
    // required string host = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->host());
  }

  if (has_user()) {
    // required string user = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user());
  }

  if (has_pass()) {
    // required string pass = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pass());
  }

  return total_size;
}
size_t SaveHost::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SaveHost)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required string host = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->host());

    // required string user = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user());

    // required string pass = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pass());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000030u) {
    // optional uint32 mode = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->mode());
    }

    // optional uint32 port = 5 [default = 10000];
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->port());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SaveHost::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SaveHost)
  GOOGLE_DCHECK_NE(&from, this);
  const SaveHost* source =
      ::google::protobuf::DynamicCastToGenerated<SaveHost>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SaveHost)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SaveHost)
    MergeFrom(*source);
  }
}

void SaveHost::MergeFrom(const SaveHost& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SaveHost)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      user_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_);
    }
    if (cached_has_bits & 0x00000008u) {
      _has_bits_[0] |= 0x00000008u;
      pass_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pass_);
    }
    if (cached_has_bits & 0x00000010u) {
      mode_ = from.mode_;
    }
    if (cached_has_bits & 0x00000020u) {
      port_ = from.port_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SaveHost::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SaveHost)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SaveHost::CopyFrom(const SaveHost& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SaveHost)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SaveHost::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void SaveHost::Swap(SaveHost* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SaveHost::InternalSwap(SaveHost* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  host_.Swap(&other->host_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  user_.Swap(&other->user_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pass_.Swap(&other->pass_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(mode_, other->mode_);
  swap(port_, other->port_);
}

::google::protobuf::Metadata SaveHost::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_client5_5fsavefile_2eproto);
  return ::file_level_metadata_client5_5fsavefile_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SaveSAM::InitAsDefaultInstance() {
}
class SaveSAM::HasBitSetters {
 public:
  static void set_has_host(SaveSAM* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_user(SaveSAM* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_pass(SaveSAM* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_db(SaveSAM* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_port(SaveSAM* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
};

::google::protobuf::internal::ExplicitlyConstructed<::std::string> SaveSAM::_i_give_permission_to_break_this_code_default_host_;
::google::protobuf::internal::ExplicitlyConstructed<::std::string> SaveSAM::_i_give_permission_to_break_this_code_default_user_;
::google::protobuf::internal::ExplicitlyConstructed<::std::string> SaveSAM::_i_give_permission_to_break_this_code_default_db_;
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SaveSAM::kHostFieldNumber;
const int SaveSAM::kUserFieldNumber;
const int SaveSAM::kPassFieldNumber;
const int SaveSAM::kDbFieldNumber;
const int SaveSAM::kPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SaveSAM::SaveSAM()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SaveSAM)
}
SaveSAM::SaveSAM(const SaveSAM& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  host_.UnsafeSetDefault(&::SaveSAM::_i_give_permission_to_break_this_code_default_host_.get());
  if (from.has_host()) {
    host_.AssignWithDefault(&::SaveSAM::_i_give_permission_to_break_this_code_default_host_.get(), from.host_);
  }
  user_.UnsafeSetDefault(&::SaveSAM::_i_give_permission_to_break_this_code_default_user_.get());
  if (from.has_user()) {
    user_.AssignWithDefault(&::SaveSAM::_i_give_permission_to_break_this_code_default_user_.get(), from.user_);
  }
  pass_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pass()) {
    pass_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pass_);
  }
  db_.UnsafeSetDefault(&::SaveSAM::_i_give_permission_to_break_this_code_default_db_.get());
  if (from.has_db()) {
    db_.AssignWithDefault(&::SaveSAM::_i_give_permission_to_break_this_code_default_db_.get(), from.db_);
  }
  port_ = from.port_;
  // @@protoc_insertion_point(copy_constructor:SaveSAM)
}

void SaveSAM::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SaveSAM_client5_5fsavefile_2eproto.base);
  host_.UnsafeSetDefault(&::SaveSAM::_i_give_permission_to_break_this_code_default_host_.get());
  user_.UnsafeSetDefault(&::SaveSAM::_i_give_permission_to_break_this_code_default_user_.get());
  pass_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_.UnsafeSetDefault(&::SaveSAM::_i_give_permission_to_break_this_code_default_db_.get());
  port_ = 3306u;
}

SaveSAM::~SaveSAM() {
  // @@protoc_insertion_point(destructor:SaveSAM)
  SharedDtor();
}

void SaveSAM::SharedDtor() {
  host_.DestroyNoArena(&::SaveSAM::_i_give_permission_to_break_this_code_default_host_.get());
  user_.DestroyNoArena(&::SaveSAM::_i_give_permission_to_break_this_code_default_user_.get());
  pass_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_.DestroyNoArena(&::SaveSAM::_i_give_permission_to_break_this_code_default_db_.get());
}

void SaveSAM::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SaveSAM& SaveSAM::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SaveSAM_client5_5fsavefile_2eproto.base);
  return *internal_default_instance();
}


void SaveSAM::Clear() {
// @@protoc_insertion_point(message_clear_start:SaveSAM)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      host_.UnsafeMutablePointer()->assign(*&::SaveSAM::_i_give_permission_to_break_this_code_default_host_.get());
    }
    if (cached_has_bits & 0x00000002u) {
      user_.UnsafeMutablePointer()->assign(*&::SaveSAM::_i_give_permission_to_break_this_code_default_user_.get());
    }
    if (cached_has_bits & 0x00000004u) {
      pass_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      db_.UnsafeMutablePointer()->assign(*&::SaveSAM::_i_give_permission_to_break_this_code_default_db_.get());
    }
    port_ = 3306u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SaveSAM::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SaveSAM*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional string host = 1 [default = "localhost"];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("SaveSAM.host");
        object = msg->mutable_host();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string user = 2 [default = "root"];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("SaveSAM.user");
        object = msg->mutable_user();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string pass = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("SaveSAM.pass");
        object = msg->mutable_pass();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string db = 4 [default = "samdb"];
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("SaveSAM.db");
        object = msg->mutable_db();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 port = 5 [default = 3306];
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_port(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SaveSAM::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SaveSAM)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string host = 1 [default = "localhost"];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->host().data(), static_cast<int>(this->host().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "SaveSAM.host");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string user = 2 [default = "root"];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->user().data(), static_cast<int>(this->user().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "SaveSAM.user");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string pass = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pass()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->pass().data(), static_cast<int>(this->pass().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "SaveSAM.pass");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string db = 4 [default = "samdb"];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_db()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->db().data(), static_cast<int>(this->db().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "SaveSAM.db");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 port = 5 [default = 3306];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_port(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SaveSAM)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SaveSAM)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SaveSAM::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SaveSAM)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string host = 1 [default = "localhost"];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host().data(), static_cast<int>(this->host().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SaveSAM.host");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->host(), output);
  }

  // optional string user = 2 [default = "root"];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user().data(), static_cast<int>(this->user().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SaveSAM.user");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->user(), output);
  }

  // optional string pass = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pass().data(), static_cast<int>(this->pass().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SaveSAM.pass");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->pass(), output);
  }

  // optional string db = 4 [default = "samdb"];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SaveSAM.db");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->db(), output);
  }

  // optional uint32 port = 5 [default = 3306];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->port(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SaveSAM)
}

::google::protobuf::uint8* SaveSAM::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SaveSAM)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string host = 1 [default = "localhost"];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host().data(), static_cast<int>(this->host().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SaveSAM.host");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->host(), target);
  }

  // optional string user = 2 [default = "root"];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user().data(), static_cast<int>(this->user().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SaveSAM.user");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->user(), target);
  }

  // optional string pass = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pass().data(), static_cast<int>(this->pass().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SaveSAM.pass");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->pass(), target);
  }

  // optional string db = 4 [default = "samdb"];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SaveSAM.db");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->db(), target);
  }

  // optional uint32 port = 5 [default = 3306];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->port(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SaveSAM)
  return target;
}

size_t SaveSAM::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SaveSAM)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional string host = 1 [default = "localhost"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->host());
    }

    // optional string user = 2 [default = "root"];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->user());
    }

    // optional string pass = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->pass());
    }

    // optional string db = 4 [default = "samdb"];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->db());
    }

    // optional uint32 port = 5 [default = 3306];
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->port());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SaveSAM::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SaveSAM)
  GOOGLE_DCHECK_NE(&from, this);
  const SaveSAM* source =
      ::google::protobuf::DynamicCastToGenerated<SaveSAM>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SaveSAM)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SaveSAM)
    MergeFrom(*source);
  }
}

void SaveSAM::MergeFrom(const SaveSAM& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SaveSAM)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      host_.AssignWithDefault(&::SaveSAM::_i_give_permission_to_break_this_code_default_host_.get(), from.host_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      user_.AssignWithDefault(&::SaveSAM::_i_give_permission_to_break_this_code_default_user_.get(), from.user_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      pass_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pass_);
    }
    if (cached_has_bits & 0x00000008u) {
      _has_bits_[0] |= 0x00000008u;
      db_.AssignWithDefault(&::SaveSAM::_i_give_permission_to_break_this_code_default_db_.get(), from.db_);
    }
    if (cached_has_bits & 0x00000010u) {
      port_ = from.port_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SaveSAM::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SaveSAM)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SaveSAM::CopyFrom(const SaveSAM& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SaveSAM)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SaveSAM::IsInitialized() const {
  return true;
}

void SaveSAM::Swap(SaveSAM* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SaveSAM::InternalSwap(SaveSAM* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  host_.Swap(&other->host_, &::SaveSAM::_i_give_permission_to_break_this_code_default_host_.get(),
    GetArenaNoVirtual());
  user_.Swap(&other->user_, &::SaveSAM::_i_give_permission_to_break_this_code_default_user_.get(),
    GetArenaNoVirtual());
  pass_.Swap(&other->pass_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  db_.Swap(&other->db_, &::SaveSAM::_i_give_permission_to_break_this_code_default_db_.get(),
    GetArenaNoVirtual());
  swap(port_, other->port_);
}

::google::protobuf::Metadata SaveSAM::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_client5_5fsavefile_2eproto);
  return ::file_level_metadata_client5_5fsavefile_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SaveMusicDB::InitAsDefaultInstance() {
}
class SaveMusicDB::HasBitSetters {
 public:
  static void set_has_folder(SaveMusicDB* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SaveMusicDB::kFolderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SaveMusicDB::SaveMusicDB()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SaveMusicDB)
}
SaveMusicDB::SaveMusicDB(const SaveMusicDB& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  folder_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_folder()) {
    folder_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.folder_);
  }
  // @@protoc_insertion_point(copy_constructor:SaveMusicDB)
}

void SaveMusicDB::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SaveMusicDB_client5_5fsavefile_2eproto.base);
  folder_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SaveMusicDB::~SaveMusicDB() {
  // @@protoc_insertion_point(destructor:SaveMusicDB)
  SharedDtor();
}

void SaveMusicDB::SharedDtor() {
  folder_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SaveMusicDB::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SaveMusicDB& SaveMusicDB::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SaveMusicDB_client5_5fsavefile_2eproto.base);
  return *internal_default_instance();
}


void SaveMusicDB::Clear() {
// @@protoc_insertion_point(message_clear_start:SaveMusicDB)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    folder_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SaveMusicDB::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SaveMusicDB*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional string folder = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("SaveMusicDB.folder");
        object = msg->mutable_folder();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SaveMusicDB::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SaveMusicDB)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string folder = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_folder()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->folder().data(), static_cast<int>(this->folder().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "SaveMusicDB.folder");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SaveMusicDB)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SaveMusicDB)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SaveMusicDB::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SaveMusicDB)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string folder = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->folder().data(), static_cast<int>(this->folder().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SaveMusicDB.folder");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->folder(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SaveMusicDB)
}

::google::protobuf::uint8* SaveMusicDB::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SaveMusicDB)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string folder = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->folder().data(), static_cast<int>(this->folder().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SaveMusicDB.folder");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->folder(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SaveMusicDB)
  return target;
}

size_t SaveMusicDB::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SaveMusicDB)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string folder = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->folder());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SaveMusicDB::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SaveMusicDB)
  GOOGLE_DCHECK_NE(&from, this);
  const SaveMusicDB* source =
      ::google::protobuf::DynamicCastToGenerated<SaveMusicDB>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SaveMusicDB)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SaveMusicDB)
    MergeFrom(*source);
  }
}

void SaveMusicDB::MergeFrom(const SaveMusicDB& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SaveMusicDB)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_folder()) {
    _has_bits_[0] |= 0x00000001u;
    folder_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.folder_);
  }
}

void SaveMusicDB::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SaveMusicDB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SaveMusicDB::CopyFrom(const SaveMusicDB& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SaveMusicDB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SaveMusicDB::IsInitialized() const {
  return true;
}

void SaveMusicDB::Swap(SaveMusicDB* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SaveMusicDB::InternalSwap(SaveMusicDB* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  folder_.Swap(&other->folder_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata SaveMusicDB::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_client5_5fsavefile_2eproto);
  return ::file_level_metadata_client5_5fsavefile_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ConfigFile::InitAsDefaultInstance() {
  ::_ConfigFile_default_instance_._instance.get_mutable()->sam_ = const_cast< ::SaveSAM*>(
      ::SaveSAM::internal_default_instance());
  ::_ConfigFile_default_instance_._instance.get_mutable()->musicdb_ = const_cast< ::SaveMusicDB*>(
      ::SaveMusicDB::internal_default_instance());
}
class ConfigFile::HasBitSetters {
 public:
  static void set_has_host_index(ConfigFile* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_beep_on_req(ConfigFile* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
  static void set_has_connect_on_startup(ConfigFile* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_keep_on_top(ConfigFile* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static const ::SaveSAM& sam(const ConfigFile* msg);
  static void set_has_sam(ConfigFile* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static const ::SaveMusicDB& musicdb(const ConfigFile* msg);
  static void set_has_musicdb(ConfigFile* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

const ::SaveSAM&
ConfigFile::HasBitSetters::sam(const ConfigFile* msg) {
  return *msg->sam_;
}
const ::SaveMusicDB&
ConfigFile::HasBitSetters::musicdb(const ConfigFile* msg) {
  return *msg->musicdb_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigFile::kHostIndexFieldNumber;
const int ConfigFile::kBeepOnReqFieldNumber;
const int ConfigFile::kConnectOnStartupFieldNumber;
const int ConfigFile::kKeepOnTopFieldNumber;
const int ConfigFile::kSamFieldNumber;
const int ConfigFile::kMusicdbFieldNumber;
const int ConfigFile::kConnectionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigFile::ConfigFile()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConfigFile)
}
ConfigFile::ConfigFile(const ConfigFile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      connections_(from.connections_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_sam()) {
    sam_ = new ::SaveSAM(*from.sam_);
  } else {
    sam_ = nullptr;
  }
  if (from.has_musicdb()) {
    musicdb_ = new ::SaveMusicDB(*from.musicdb_);
  } else {
    musicdb_ = nullptr;
  }
  ::memcpy(&host_index_, &from.host_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&beep_on_req_) -
    reinterpret_cast<char*>(&host_index_)) + sizeof(beep_on_req_));
  // @@protoc_insertion_point(copy_constructor:ConfigFile)
}

void ConfigFile::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ConfigFile_client5_5fsavefile_2eproto.base);
  ::memset(&sam_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&keep_on_top_) -
      reinterpret_cast<char*>(&sam_)) + sizeof(keep_on_top_));
  beep_on_req_ = true;
}

ConfigFile::~ConfigFile() {
  // @@protoc_insertion_point(destructor:ConfigFile)
  SharedDtor();
}

void ConfigFile::SharedDtor() {
  if (this != internal_default_instance()) delete sam_;
  if (this != internal_default_instance()) delete musicdb_;
}

void ConfigFile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ConfigFile& ConfigFile::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ConfigFile_client5_5fsavefile_2eproto.base);
  return *internal_default_instance();
}


void ConfigFile::Clear() {
// @@protoc_insertion_point(message_clear_start:ConfigFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  connections_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(sam_ != nullptr);
      sam_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(musicdb_ != nullptr);
      musicdb_->Clear();
    }
  }
  if (cached_has_bits & 0x0000003cu) {
    ::memset(&host_index_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&keep_on_top_) -
        reinterpret_cast<char*>(&host_index_)) + sizeof(keep_on_top_));
    beep_on_req_ = true;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ConfigFile::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ConfigFile*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional int32 host_index = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_host_index(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool beep_on_req = 3 [default = true];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_beep_on_req(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool connect_on_startup = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_connect_on_startup(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool keep_on_top = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_keep_on_top(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional .SaveSAM sam = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::SaveSAM::_InternalParse;
        object = msg->mutable_sam();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // optional .SaveMusicDB musicdb = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::SaveMusicDB::_InternalParse;
        object = msg->mutable_musicdb();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // repeated .SaveHost connections = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::SaveHost::_InternalParse;
          object = msg->add_connections();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 66 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ConfigFile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ConfigFile)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 host_index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_host_index(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &host_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool beep_on_req = 3 [default = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_beep_on_req(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &beep_on_req_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool connect_on_startup = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_connect_on_startup(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &connect_on_startup_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool keep_on_top = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_keep_on_top(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &keep_on_top_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .SaveSAM sam = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sam()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .SaveMusicDB musicdb = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_musicdb()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .SaveHost connections = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_connections()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ConfigFile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ConfigFile)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ConfigFile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ConfigFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 host_index = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->host_index(), output);
  }

  // optional bool beep_on_req = 3 [default = true];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->beep_on_req(), output);
  }

  // optional bool connect_on_startup = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->connect_on_startup(), output);
  }

  // optional bool keep_on_top = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->keep_on_top(), output);
  }

  // optional .SaveSAM sam = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, HasBitSetters::sam(this), output);
  }

  // optional .SaveMusicDB musicdb = 7;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, HasBitSetters::musicdb(this), output);
  }

  // repeated .SaveHost connections = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->connections_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->connections(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ConfigFile)
}

::google::protobuf::uint8* ConfigFile::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ConfigFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 host_index = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->host_index(), target);
  }

  // optional bool beep_on_req = 3 [default = true];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->beep_on_req(), target);
  }

  // optional bool connect_on_startup = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->connect_on_startup(), target);
  }

  // optional bool keep_on_top = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->keep_on_top(), target);
  }

  // optional .SaveSAM sam = 6;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, HasBitSetters::sam(this), target);
  }

  // optional .SaveMusicDB musicdb = 7;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, HasBitSetters::musicdb(this), target);
  }

  // repeated .SaveHost connections = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->connections_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->connections(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConfigFile)
  return target;
}

size_t ConfigFile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ConfigFile)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .SaveHost connections = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->connections_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->connections(static_cast<int>(i)));
    }
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional .SaveSAM sam = 6;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *sam_);
    }

    // optional .SaveMusicDB musicdb = 7;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *musicdb_);
    }

    // optional int32 host_index = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->host_index());
    }

    // optional bool connect_on_startup = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 1;
    }

    // optional bool keep_on_top = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 1;
    }

    // optional bool beep_on_req = 3 [default = true];
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfigFile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ConfigFile)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigFile* source =
      ::google::protobuf::DynamicCastToGenerated<ConfigFile>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ConfigFile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ConfigFile)
    MergeFrom(*source);
  }
}

void ConfigFile::MergeFrom(const ConfigFile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ConfigFile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  connections_.MergeFrom(from.connections_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      mutable_sam()->::SaveSAM::MergeFrom(from.sam());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_musicdb()->::SaveMusicDB::MergeFrom(from.musicdb());
    }
    if (cached_has_bits & 0x00000004u) {
      host_index_ = from.host_index_;
    }
    if (cached_has_bits & 0x00000008u) {
      connect_on_startup_ = from.connect_on_startup_;
    }
    if (cached_has_bits & 0x00000010u) {
      keep_on_top_ = from.keep_on_top_;
    }
    if (cached_has_bits & 0x00000020u) {
      beep_on_req_ = from.beep_on_req_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ConfigFile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ConfigFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigFile::CopyFrom(const ConfigFile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ConfigFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigFile::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->connections())) return false;
  return true;
}

void ConfigFile::Swap(ConfigFile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConfigFile::InternalSwap(ConfigFile* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&connections_)->InternalSwap(CastToBase(&other->connections_));
  swap(sam_, other->sam_);
  swap(musicdb_, other->musicdb_);
  swap(host_index_, other->host_index_);
  swap(connect_on_startup_, other->connect_on_startup_);
  swap(keep_on_top_, other->keep_on_top_);
  swap(beep_on_req_, other->beep_on_req_);
}

::google::protobuf::Metadata ConfigFile::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_client5_5fsavefile_2eproto);
  return ::file_level_metadata_client5_5fsavefile_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::SaveHost* Arena::CreateMaybeMessage< ::SaveHost >(Arena* arena) {
  return Arena::CreateInternal< ::SaveHost >(arena);
}
template<> PROTOBUF_NOINLINE ::SaveSAM* Arena::CreateMaybeMessage< ::SaveSAM >(Arena* arena) {
  return Arena::CreateInternal< ::SaveSAM >(arena);
}
template<> PROTOBUF_NOINLINE ::SaveMusicDB* Arena::CreateMaybeMessage< ::SaveMusicDB >(Arena* arena) {
  return Arena::CreateInternal< ::SaveMusicDB >(arena);
}
template<> PROTOBUF_NOINLINE ::ConfigFile* Arena::CreateMaybeMessage< ::ConfigFile >(Arena* arena) {
  return Arena::CreateInternal< ::ConfigFile >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
