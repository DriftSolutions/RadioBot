//@AUTOHEADER@BEGIN@
/**********************************************************************\
|                          ShoutIRC RadioBot                           |
|           Copyright 2004-2020 Drift Solutions / Indy Sams            |
|        More information available at https://www.shoutirc.com        |
|                                                                      |
|                    This file is part of RadioBot.                    |
|                                                                      |
|   RadioBot is free software: you can redistribute it and/or modify   |
| it under the terms of the GNU General Public License as published by |
|  the Free Software Foundation, either version 3 of the License, or   |
|                 (at your option) any later version.                  |
|                                                                      |
|     RadioBot is distributed in the hope that it will be useful,      |
|    but WITHOUT ANY WARRANTY; without even the implied warranty of    |
|     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the     |
|             GNU General Public License for more details.             |
|                                                                      |
|  You should have received a copy of the GNU General Public License   |
|  along with RadioBot. If not, see <https://www.gnu.org/licenses/>.   |
\**********************************************************************/
//@AUTOHEADER@END@

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: remote_protobuf.proto

#ifndef PROTOBUF_INCLUDED_remote_5fprotobuf_2eproto
#define PROTOBUF_INCLUDED_remote_5fprotobuf_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_remote_5fprotobuf_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_remote_5fprotobuf_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_remote_5fprotobuf_2eproto();
class RemoteFindQuery;
class RemoteFindQueryDefaultTypeInternal;
extern RemoteFindQueryDefaultTypeInternal _RemoteFindQuery_default_instance_;
class RemoteFindResult;
class RemoteFindResultDefaultTypeInternal;
extern RemoteFindResultDefaultTypeInternal _RemoteFindResult_default_instance_;
class RemoteFindResultEntry;
class RemoteFindResultEntryDefaultTypeInternal;
extern RemoteFindResultEntryDefaultTypeInternal _RemoteFindResultEntry_default_instance_;
namespace google {
namespace protobuf {
template<> ::RemoteFindQuery* Arena::CreateMaybeMessage<::RemoteFindQuery>(Arena*);
template<> ::RemoteFindResult* Arena::CreateMaybeMessage<::RemoteFindResult>(Arena*);
template<> ::RemoteFindResultEntry* Arena::CreateMaybeMessage<::RemoteFindResultEntry>(Arena*);
}  // namespace protobuf
}  // namespace google

// ===================================================================

class RemoteFindQuery final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RemoteFindQuery) */ {
 public:
  RemoteFindQuery();
  virtual ~RemoteFindQuery();

  RemoteFindQuery(const RemoteFindQuery& from);

  inline RemoteFindQuery& operator=(const RemoteFindQuery& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RemoteFindQuery(RemoteFindQuery&& from) noexcept
    : RemoteFindQuery() {
    *this = ::std::move(from);
  }

  inline RemoteFindQuery& operator=(RemoteFindQuery&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const RemoteFindQuery& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RemoteFindQuery* internal_default_instance() {
    return reinterpret_cast<const RemoteFindQuery*>(
               &_RemoteFindQuery_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(RemoteFindQuery* other);
  friend void swap(RemoteFindQuery& a, RemoteFindQuery& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RemoteFindQuery* New() const final {
    return CreateMaybeMessage<RemoteFindQuery>(nullptr);
  }

  RemoteFindQuery* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RemoteFindQuery>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RemoteFindQuery& from);
  void MergeFrom(const RemoteFindQuery& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RemoteFindQuery* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string query = 2;
  bool has_query() const;
  void clear_query();
  static const int kQueryFieldNumber = 2;
  const ::std::string& query() const;
  void set_query(const ::std::string& value);
  #if LANG_CXX11
  void set_query(::std::string&& value);
  #endif
  void set_query(const char* value);
  void set_query(const char* value, size_t size);
  ::std::string* mutable_query();
  ::std::string* release_query();
  void set_allocated_query(::std::string* query);

  // required uint32 search_id = 1;
  bool has_search_id() const;
  void clear_search_id();
  static const int kSearchIdFieldNumber = 1;
  ::google::protobuf::uint32 search_id() const;
  void set_search_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:RemoteFindQuery)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr query_;
  ::google::protobuf::uint32 search_id_;
  friend struct ::TableStruct_remote_5fprotobuf_2eproto;
};
// -------------------------------------------------------------------

class RemoteFindResultEntry final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RemoteFindResultEntry) */ {
 public:
  RemoteFindResultEntry();
  virtual ~RemoteFindResultEntry();

  RemoteFindResultEntry(const RemoteFindResultEntry& from);

  inline RemoteFindResultEntry& operator=(const RemoteFindResultEntry& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RemoteFindResultEntry(RemoteFindResultEntry&& from) noexcept
    : RemoteFindResultEntry() {
    *this = ::std::move(from);
  }

  inline RemoteFindResultEntry& operator=(RemoteFindResultEntry&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const RemoteFindResultEntry& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RemoteFindResultEntry* internal_default_instance() {
    return reinterpret_cast<const RemoteFindResultEntry*>(
               &_RemoteFindResultEntry_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(RemoteFindResultEntry* other);
  friend void swap(RemoteFindResultEntry& a, RemoteFindResultEntry& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RemoteFindResultEntry* New() const final {
    return CreateMaybeMessage<RemoteFindResultEntry>(nullptr);
  }

  RemoteFindResultEntry* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RemoteFindResultEntry>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RemoteFindResultEntry& from);
  void MergeFrom(const RemoteFindResultEntry& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RemoteFindResultEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string file = 1;
  bool has_file() const;
  void clear_file();
  static const int kFileFieldNumber = 1;
  const ::std::string& file() const;
  void set_file(const ::std::string& value);
  #if LANG_CXX11
  void set_file(::std::string&& value);
  #endif
  void set_file(const char* value);
  void set_file(const char* value, size_t size);
  ::std::string* mutable_file();
  ::std::string* release_file();
  void set_allocated_file(::std::string* file);

  // optional uint32 file_id = 2;
  bool has_file_id() const;
  void clear_file_id();
  static const int kFileIdFieldNumber = 2;
  ::google::protobuf::uint32 file_id() const;
  void set_file_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:RemoteFindResultEntry)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr file_;
  ::google::protobuf::uint32 file_id_;
  friend struct ::TableStruct_remote_5fprotobuf_2eproto;
};
// -------------------------------------------------------------------

class RemoteFindResult final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RemoteFindResult) */ {
 public:
  RemoteFindResult();
  virtual ~RemoteFindResult();

  RemoteFindResult(const RemoteFindResult& from);

  inline RemoteFindResult& operator=(const RemoteFindResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RemoteFindResult(RemoteFindResult&& from) noexcept
    : RemoteFindResult() {
    *this = ::std::move(from);
  }

  inline RemoteFindResult& operator=(RemoteFindResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const RemoteFindResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RemoteFindResult* internal_default_instance() {
    return reinterpret_cast<const RemoteFindResult*>(
               &_RemoteFindResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(RemoteFindResult* other);
  friend void swap(RemoteFindResult& a, RemoteFindResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RemoteFindResult* New() const final {
    return CreateMaybeMessage<RemoteFindResult>(nullptr);
  }

  RemoteFindResult* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RemoteFindResult>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RemoteFindResult& from);
  void MergeFrom(const RemoteFindResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RemoteFindResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .RemoteFindResultEntry files = 2;
  int files_size() const;
  void clear_files();
  static const int kFilesFieldNumber = 2;
  ::RemoteFindResultEntry* mutable_files(int index);
  ::google::protobuf::RepeatedPtrField< ::RemoteFindResultEntry >*
      mutable_files();
  const ::RemoteFindResultEntry& files(int index) const;
  ::RemoteFindResultEntry* add_files();
  const ::google::protobuf::RepeatedPtrField< ::RemoteFindResultEntry >&
      files() const;

  // required uint32 search_id = 1;
  bool has_search_id() const;
  void clear_search_id();
  static const int kSearchIdFieldNumber = 1;
  ::google::protobuf::uint32 search_id() const;
  void set_search_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:RemoteFindResult)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::RemoteFindResultEntry > files_;
  ::google::protobuf::uint32 search_id_;
  friend struct ::TableStruct_remote_5fprotobuf_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// RemoteFindQuery

// required uint32 search_id = 1;
inline bool RemoteFindQuery::has_search_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RemoteFindQuery::clear_search_id() {
  search_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 RemoteFindQuery::search_id() const {
  // @@protoc_insertion_point(field_get:RemoteFindQuery.search_id)
  return search_id_;
}
inline void RemoteFindQuery::set_search_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  search_id_ = value;
  // @@protoc_insertion_point(field_set:RemoteFindQuery.search_id)
}

// required string query = 2;
inline bool RemoteFindQuery::has_query() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RemoteFindQuery::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& RemoteFindQuery::query() const {
  // @@protoc_insertion_point(field_get:RemoteFindQuery.query)
  return query_.GetNoArena();
}
inline void RemoteFindQuery::set_query(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RemoteFindQuery.query)
}
#if LANG_CXX11
inline void RemoteFindQuery::set_query(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  query_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RemoteFindQuery.query)
}
#endif
inline void RemoteFindQuery::set_query(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RemoteFindQuery.query)
}
inline void RemoteFindQuery::set_query(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RemoteFindQuery.query)
}
inline ::std::string* RemoteFindQuery::mutable_query() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:RemoteFindQuery.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RemoteFindQuery::release_query() {
  // @@protoc_insertion_point(field_release:RemoteFindQuery.query)
  if (!has_query()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return query_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RemoteFindQuery::set_allocated_query(::std::string* query) {
  if (query != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:RemoteFindQuery.query)
}

// -------------------------------------------------------------------

// RemoteFindResultEntry

// required string file = 1;
inline bool RemoteFindResultEntry::has_file() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RemoteFindResultEntry::clear_file() {
  file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& RemoteFindResultEntry::file() const {
  // @@protoc_insertion_point(field_get:RemoteFindResultEntry.file)
  return file_.GetNoArena();
}
inline void RemoteFindResultEntry::set_file(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RemoteFindResultEntry.file)
}
#if LANG_CXX11
inline void RemoteFindResultEntry::set_file(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  file_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RemoteFindResultEntry.file)
}
#endif
inline void RemoteFindResultEntry::set_file(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RemoteFindResultEntry.file)
}
inline void RemoteFindResultEntry::set_file(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RemoteFindResultEntry.file)
}
inline ::std::string* RemoteFindResultEntry::mutable_file() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:RemoteFindResultEntry.file)
  return file_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RemoteFindResultEntry::release_file() {
  // @@protoc_insertion_point(field_release:RemoteFindResultEntry.file)
  if (!has_file()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return file_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RemoteFindResultEntry::set_allocated_file(::std::string* file) {
  if (file != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  file_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file);
  // @@protoc_insertion_point(field_set_allocated:RemoteFindResultEntry.file)
}

// optional uint32 file_id = 2;
inline bool RemoteFindResultEntry::has_file_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RemoteFindResultEntry::clear_file_id() {
  file_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 RemoteFindResultEntry::file_id() const {
  // @@protoc_insertion_point(field_get:RemoteFindResultEntry.file_id)
  return file_id_;
}
inline void RemoteFindResultEntry::set_file_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  file_id_ = value;
  // @@protoc_insertion_point(field_set:RemoteFindResultEntry.file_id)
}

// -------------------------------------------------------------------

// RemoteFindResult

// required uint32 search_id = 1;
inline bool RemoteFindResult::has_search_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RemoteFindResult::clear_search_id() {
  search_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 RemoteFindResult::search_id() const {
  // @@protoc_insertion_point(field_get:RemoteFindResult.search_id)
  return search_id_;
}
inline void RemoteFindResult::set_search_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  search_id_ = value;
  // @@protoc_insertion_point(field_set:RemoteFindResult.search_id)
}

// repeated .RemoteFindResultEntry files = 2;
inline int RemoteFindResult::files_size() const {
  return files_.size();
}
inline void RemoteFindResult::clear_files() {
  files_.Clear();
}
inline ::RemoteFindResultEntry* RemoteFindResult::mutable_files(int index) {
  // @@protoc_insertion_point(field_mutable:RemoteFindResult.files)
  return files_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::RemoteFindResultEntry >*
RemoteFindResult::mutable_files() {
  // @@protoc_insertion_point(field_mutable_list:RemoteFindResult.files)
  return &files_;
}
inline const ::RemoteFindResultEntry& RemoteFindResult::files(int index) const {
  // @@protoc_insertion_point(field_get:RemoteFindResult.files)
  return files_.Get(index);
}
inline ::RemoteFindResultEntry* RemoteFindResult::add_files() {
  // @@protoc_insertion_point(field_add:RemoteFindResult.files)
  return files_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RemoteFindResultEntry >&
RemoteFindResult::files() const {
  // @@protoc_insertion_point(field_list:RemoteFindResult.files)
  return files_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_remote_5fprotobuf_2eproto
